@using WebAPI.Models
@using System.Text.Json
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<style>
.chart-container {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}
.chart-column {
    flex: 1;
    min-width: 300px;
    max-width: 400px;
    margin: 10px;
}
.chart-row {
    display: flex;
    gap: 10px;
}
canvas {
    max-width: 100%;
    height: 200px;
}
.chart-title {
    text-align: center;
    font-weight: bold;
    margin-top: 10px;
}
</style>

<div class="chart-container">
    <div class="chart-column">
        <div class="chart-title">Total Energy Consumption</div>
        <canvas id="totalEnergyChart"></canvas>
        <div class="chart-title">Crude Fuel</div>
        <canvas id="crudeFuelChart"></canvas>
        <div class="chart-title">Gas Fuel</div>
        <canvas id="gasFuelChart"></canvas>
        <div class="chart-title">Purchased Electricity</div>
        <canvas id="purchElecChart"></canvas>
        <div class="chart-title">Renewable Energy</div>
        <canvas id="renewEnergyChart"></canvas>
        <div class="chart-title">Fossil Energy</div>
        <canvas id="fossilEnergyChart"></canvas>
    </div>
    <div class="chart-column">
        <canvas id="edataGraph"></canvas>
        <canvas id="greenhouseGraph"></canvas>
        <canvas id="waterGraph"></canvas>
        <canvas id="wasteGraph"></canvas>
        <canvas id="scope3SoldProductsGraph"></canvas>
    </div>
    <div class="chart-column">
        <div class="chart-title">Scope 1 and 2 Market-based</div>
        <canvas id="scope12MarketChart"></canvas>
        <div class="chart-title">Scope 1 and 2 Location-based</div>
        <canvas id="scope12LocationChart"></canvas>
        <div class="chart-title">Scope 3 Sold Products</div>
        <canvas id="scope3SoldProductsChart"></canvas>
        <div class="chart-title">Water Consumption</div>
        <canvas id="waterConsumptionChart"></canvas>
    </div>
</div>

@code {
    private List<Edata> edataList = new List<Edata>();
    private List<GreenHouse> greenHouseList = new List<GreenHouse>();
    private List<Water> waterList = new List<Water>();
    private List<Waste> wasteList = new List<Waste>();

    protected override async Task OnInitializedAsync()
    {
        edataList = await Http.GetFromJsonAsync<List<Edata>>("api/edata");
        greenHouseList = await Http.GetFromJsonAsync<List<GreenHouse>>("api/greenhouse");
        waterList = await Http.GetFromJsonAsync<List<Water>>("api/water");
        wasteList = await Http.GetFromJsonAsync<List<Waste>>("api/waste");
        await JSRuntime.InvokeVoidAsync("fetchData");
    }
}